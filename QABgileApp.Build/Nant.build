<?xml version="1.0" encoding="utf-8" ?>
<!-- See my blog posts here, for further documentation on how to use Nant.Builder: 
     http://iainhunter.wordpress.com/2012/05/11/automating-visual-studio-2010-builds-and-deployments-with-nant-builder/ 
	 http://iainhunter.wordpress.com/2012/05/28/visual-studio-turbo-diy-appharbor-with-nant-builder/
	 -->
<project name="" default="buildRelease" xmlns="http://nant.sf.net/nightly/2015-11-10-0.93/nant.xsd" basedir=".">
	<!-- IMPORTANT PLEASE SET THESE VALUES APPROPRIATELY FOR YOUR ENVIRONMENT IN GLOBALBUILDSETTINGS.XML.  If you use NantBuilder 
	     on multiple projects you can share the file between multiple projects, by referencing the file, eg c:\dev\globalbuildsettings.xml-->
	<include buildfile="GlobalBuildSettings.xml" />
  <property name="nant.settings.currentframework" value="net-4.5" />
	<!--The name of your solution, please overwrite the default -->
	<property name="solution.name" value="QABgileApp"/>

	<!-- Comma seperated list of projects contained in your solution, DO NOT include Azure or Build projects, these should be projects 
	     containing Assembly.Info files, so they get appropriately versioned.-->
	<property name="solution.projects" value="QABgileApp.Framework,QABgileApp.Test" />

	<!-- Set the configuration for compilation, typically release, but may be custom -->
	<property name="release.configuration" value="Release" />

	<!-- Manually set version, if using CCNet this will be overwritten later -->
	<property name="version.tag" value="1.0.0.1"/>
	<property name="company.name" value="Braindigit" />

	<!-- If your projects reside in a different directory from the .sln file specify here, or leave empty if not -->
	<property name="solution.src.dir" value="" />

	<!--Nunit Test Settings-->
	<property name="run.nunit.tests" value="true" />
	<!--The names of the projects containing your Nunit tests, comma seperated with no spaces-->
	<property name="test.project.names" value="QABgileApp.Test" />

	<!-- This target controls the build-->
	<target name="buildRelease" description="Build the release, and run integration tests">
		<call target="DetermineBuild" />
		<!--<call target="AssembleFromWorkspace" if="${is.release.local}"/>
		<call target="UpdateAssemblyInfo" />
		<call target="CompileSolution" />-->
    <call target="runtest"/>
		<!--<call target="RunNunitTests" if="${run.nunit.tests}" />-->
	</target>
	<!--Load BuildTargets-->
	<include buildfile="BuildTargets.xml" />
</project>